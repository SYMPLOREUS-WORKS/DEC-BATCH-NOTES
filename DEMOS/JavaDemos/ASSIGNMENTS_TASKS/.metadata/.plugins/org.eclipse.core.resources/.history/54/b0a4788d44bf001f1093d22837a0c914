package com.bharath.java.langpackage;

import java.lang.reflect.Method;
import java.util.Objects;

import com.bharath.modifiers.ModifiersDemo;

class Student {
	private int rollno;
	private String name;

	public Student(int rollno, String name) {
		super();
		this.rollno = rollno;
		this.name = name;
	}

	@Override
	public int hashCode() {
		return Objects.hash(name, rollno);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Student other = (Student) obj;
		return Objects.equals(name, other.name) && rollno == other.rollno;
	}
	
	
}

public class ObjectClassMethodsDemo extends ModifiersDemo {

	public static void main(String[] args) {

		ObjectClassMethodsDemo o = new ObjectClassMethodsDemo();
		ObjectClassMethodsDemo o1 = new ObjectClassMethodsDemo();

		Class c = o.getClass();
		String name = c.getName();
		System.out.println(name);
		Method[] methods = c.getDeclaredMethods();
		for (Method m : methods) {
			System.out.println(m);
		}

		// hashcode method
		System.out.println("hascode of o " + o.hashCode());
		System.out.println("hascode of o1 " + o1.hashCode());
		// tostring()
		// string object of corresponding object will be using using to string method
		System.out.println("string rep o " + o.toString());
		System.out.println("string rep o" + o);

		// equals
		Student s1 = new Student(1, "John");
		Student s2 = new Student(1, "John");
		System.out.print("s1==s2 ");
		System.out.println(s1 == s2);
		System.out.println("s1.equals(s2) ");
		System.out.println(s1.equals(s2));

		String str1 = new String("abc");
		String str2 = new String("abc");
		System.out.print("str1==str2 ");
		System.out.println(str1 == str2);
		System.out.println("str1.equals(str2) ");
		System.out.println(str1.equals(str2));
		
		
		Object ob= new Object();
		ob.finalize();
		//finalise()

	}

	public static void m1() {
	}

}
